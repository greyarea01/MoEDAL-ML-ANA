# -*- coding: utf-8 -*-
"""final_test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CPJqapNxR6i46jXGypvlGItX0FfLRXH6
"""

#!pip install tensorflow==2.4.1
import tensorflow as tf
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Dropout, Conv2DTranspose, concatenate, Input
from tensorflow.keras.optimizers import Adam
from tensorflow.keras import backend as K
import numpy as np
import matplotlib.pyplot as plt
import cv2
import os
from PIL import Image
from tqdm import tqdm_notebook as tqdm

def display(display_list):
	plt.figure(figsize=(30, 30))
	title = ['Dirty Image', 'Clean Image','Predicted Image']
	for count in range(len(display_list)):
		plt.subplot(1, len(display_list), count + 1)
		plt.title(title[count])
		plt.imshow(display_list[count], cmap="gray")
		plt.axis('off')
	plt.show()

dirty_test = np.load("numpy_data_eval/preprocessed_dirty_reverse_eval.npy", allow_pickle = True)
clean_test = np.load("numpy_data_eval/preprocessed_clean_reverse_eval.npy", allow_pickle = True)

print(dirty_test.shape)

dirty_test = dirty_test/255
clean_test = clean_test/255
#clean_test = np.pad(clean_test,((0,0),(4,4),(4,4)),'constant',constant_values=1)
#dirty_test = np.pad(dirty_test,((0,0),(4,4),(4,4),(0,0)),'constant',constant_values=1)

new_model = tf.keras.models.load_model("model/unet")

pr = new_model.predict(dirty_test)
#pr = np.load("/content/drive/My Drive/MoEDAL/final/model/final_eval_predict.npy", allow_pickle = True)

for j in range(249):
  display([dirty_test[j,:,:,8],clean_test[j,:,:],pr[j,:,:,0]])

np.save("numpy_Data_eval/final_reverse_eval_predict",pr)
np.save("numpy_Data_eval/final_reverse_eval_clean",clean_test)
np.save("numpy_Data_eval/final_reverse_eval_dirty",dirty_test)
